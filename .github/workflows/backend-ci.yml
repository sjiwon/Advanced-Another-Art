name: Backend CI

on:
  pull_request:
    branches:
      - main-x
      - develop-x
    types:
      - opened
      - synchronize
    paths:
      - backend/**

permissions: write-all

jobs:
  buildAndTest:
    name: Backend(SpringBoot) Build & Test
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: Repository를 가져온다
        uses: actions/checkout@v3

      - name: JDK 17을 설치한다
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Timezone을 Asia/Seoul로 설정한다
        uses: zcong1993/setup-timezone@master
        with:
          timezone: Asia/Seoul

      - name: Github Action Secrets에 등록된 정보들을 가져온다
        env:
          EXTERNAL_CONFIG: ${{ secrets.BE_EXTERNAL_CONFIG }}
          LOCAL_DATASOURCE: ${{ secrets.BE_LOCAL_DATASOURCE }}
          PROD_DATASOURCE: ${{ secrets.BE_PROD_DATASOURCE }}
        run: mkdir -p ./backend/src/main/resources/security &&
          echo $EXTERNAL_CONFIG | base64 --decode > ./backend/src/main/resources/security/application-external.yml &&
          echo $LOCAL_DATASOURCE | base64 --decode > ./backend/src/main/resources/security/application-local-datasource.yml &&
          echo $PROD_DATASOURCE | base64 --decode > ./backend/src/main/resources/security/application-prod-datasource.yml

      - name: 테스트시 필요한 Local Redis에 대한 Action을 가져온다
        uses: supercharge/redis-github-action@1.2.0
        with:
          redis-version: 6

      - name: Redis Client를 설치한다
        run: sudo apt-get install -y redis-tools

      - name: Redis Ping 테스트를 진행한다
        run: redis-cli ping

      - name: Gradle 명령 실행을 위한 권한을 부여한다
        run: chmod +x gradlew

      - name: Gradle build를 수행한다
        run: ./gradlew build

      - name: 테스트 결과를 PR에 코멘트로 등록한다
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: '**/build/test-results/test/TEST-*.xml'

      - name: 테스트 실패 시, 실패한 코드 라인에 Check 코멘트를 등록한다
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'
          token: ${{ secrets.GITHUB_TOKEN }}
